/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    
    factory(root.expect, root.OpenApiDefinition);
  }
}(this, function(expect, OpenApiDefinition) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenApiDefinition.UserRequest();
  });

  var getProperty = function(object, getter, property) {
    
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserRequest', function() {
    it('should create an instance of UserRequest', function() {
      
      //var instance = new OpenApiDefinition.UserRequest();
      //expect(instance).to.be.a(OpenApiDefinition.UserRequest);
    });

    it('should have the property name (base name: "name")', function() {
      
      //var instance = new OpenApiDefinition.UserRequest();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      
      //var instance = new OpenApiDefinition.UserRequest();
      //expect(instance).to.be();
    });

    it('should have the property billingAddress (base name: "billingAddress")', function() {
      
      //var instance = new OpenApiDefinition.UserRequest();
      //expect(instance).to.be();
    });

  });

}));
